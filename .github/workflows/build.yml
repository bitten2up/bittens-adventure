name: build

on:
  push:
    branches: [ next, master ]
  pull_request:
    branches: [ next, master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: install emuscription
      run: git clone https://github.com/emscripten-core/emsdk.git; cd emsdk; ./emsdk install latest; ./emsdk activate latest; source ./emsdk_env.sh
    - name: install Raylib
      run: cd emsdk; source ./emsdk_env.sh; cd ..; git clone https://github.com/raysan5/raylib; cd raylib/src; emcc -c rcore.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2; emcc -c rshapes.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2; emcc -c rtextures.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2; emcc -c rtext.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2; emcc -c rmodels.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2; emcc -c utils.c -Os -Wall -DPLATFORM_WEB; emcc -c raudio.c -Os -Wall -DPLATFORM_WEB; emar rcs libraylib.a rcore.o rshapes.o rtextures.o rtext.o rmodels.o utils.o raudio.o;
    - name: Compile
      run: cd emsdk; source ./emsdk_env.sh; cd ..; make PLATFORM=PLATFORM_WEB CC=emcc PATH=$PATH RAYLIB_PATH=./raylib -B;
    - name: setup publishing to github pages
      run: mkdir website; cp bittens-adventure.html website/index.html; cp bitten-adventure.js website/bitten.js; cp bittens-adventure.wasm website/bitten.wasm; cp bittens-adventure.data website/bitten.data; echo "adventure.bitten2up.dev" > website/CNAME
    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: web
        FOLDER: website
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
